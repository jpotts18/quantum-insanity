import Foundation

class <%= @vc["name"] %>TableViewController: UITableViewController, UITableViewDataSource, UITableViewDelegate, Network<%= @vc["name"] %>Delegate {

    var <%= @vc["name"].downcase %>List:[Device] = []
    let <%= @vc["name"].downcase %>Controller:<%= @vc["name"] %>Controller = <%= @vc["name"] %>Controller(delegate: self)

    override func viewDidLoad(){
        <%= @vc["name"].downcase %>Controller.getAll()
    }
    
    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {

        var simpleIdentifier:String = "SimpleIdentifier"
        
        var cell:UITableViewCell = tableView.dequeueReusableCellWithIdentifier(simpleIdentifier, forIndexPath: indexPath) as UITableViewCell
    
        cell.textLabel?.text = <%= @vc["name"].downcase %>List[indexPath.row].name
        
        return cell
    }
    
    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return <%= @vc["name"].downcase %>List.count
    }
    
    
}